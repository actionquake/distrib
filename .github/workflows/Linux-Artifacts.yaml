name: Linux Artifacts

# on:
#   push:
#     branches: ci

on:
  workflow_dispatch:

env:
  Q2PRO_DIR: q2probuild
  TNG_DIR: tngbuild
  DIST_DIR: config

jobs:
  linux_x86_64_build:
    runs-on: [self-hosted, x86]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/q2pro
          path: ${{ env.Q2PRO_DIR }}

      - uses: actions/checkout@v3
        with:
          repository: aq2-tng/aq2-tng
          ref: 'bots'
          path: ${{ env.TNG_DIR }}

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: ${{ env.DIST_DIR }

      - name: Get version info for q2pro
        id: version
        run: |
          cp ${{ env.DIST_DIR }/build/getversion.sh ${{ env.Q2PRO_DIR }}/
          cd ${{ env.Q2PRO_DIR }} && bash -x getversion.sh q2pro >> versions

      - name: Copy config build files
        run: |
          cp ${{ env.DIST_DIR }/build/linux/config_linux64 ${{ env.Q2PRO_DIR }}/.config
          cp ${{ env.DIST_DIR }/build/q2pro_Makefile ${{ env.Q2PRO_DIR }}/Makefile

      - name: Build Q2Pro
        working-directory: ${{ env.Q2PRO_DIR }}
        run: make strip -j2 V=1
        env:
          CC: "gcc"
          CONFIG_FILE: ".config"

      - name: Make Q2Pro binaries executable
        working-directory: ${{ env.Q2PRO_DIR }}
        run: |
          chmod +x q2pro q2proded

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-linux-x86_64
          path: |
            ${{ env.Q2PRO_DIR }}/q2pro
            ${{ env.Q2PRO_DIR }}/q2proded
            ${{ env.Q2PRO_DIR }}/versions

      - name: Get version info for tng
        id: version
        run: |
          cp ${{ env.DIST_DIR }/build/getversion.sh ${{ env.TNG_DIR }}/
          cd ${{ env.TNG_DIR }} && bash -x getversion.sh tng >> versions

      - name: Build TNG
        working-directory: ${{ env.TNG_DIR }}/source
        run: make -j2 V=1 && mv gamex86_64.so ../gamex86_64.so
        env:
          CC: "gcc"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-x86_64-library
          path: |
            ${{ env.TNG_DIR }}/gamex86_64.so
            ${{ env.TNG_DIR }}/versions

  linux_arm_build_q2pro:
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, ARM64]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/q2pro
          path: ${{ env.Q2PRO_DIR }}

      - name: Display version info
        working-directory: ${{ env.Q2PRO_DIR }}
        run: bash version.sh

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: ${{ env.DIST_DIR }

      - name: Get version info for q2pro
        id: version
        run: |
          cp ${{ env.DIST_DIR }/build/getversion.sh ${{ env.Q2PRO_DIR }}/
          cd ${{ env.Q2PRO_DIR }} && bash -x getversion.sh q2pro >> versions

      - name: Copy config build files
        run: |
          cp ${{ env.DIST_DIR }/build/linux/config_linux64 ${{ env.Q2PRO_DIR }}/.config

      - name: Build Q2Pro
        working-directory: ${{ env.Q2PRO_DIR }}
        run: make strip -j2 V=1
        env:
          CC: "gcc"
          CONFIG_FILE: ".config"

      - name: Make Q2Pro binaries executable
        working-directory: ${{ env.Q2PRO_DIR }}
        run: |
          chmod +x q2pro q2proded
      
      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-linux-arm64
          path: |
            ${{ env.Q2PRO_DIR }}/q2pro
            ${{ env.Q2PRO_DIR }}/q2proded
            ${{ env.Q2PRO_DIR }}/versions

      - name: Get version info for tng
        id: version
        run: |
          cp ${{ env.DIST_DIR }/build/getversion.sh ${{ env.TNG_DIR }}/
          cd ${{ env.TNG_DIR }} && bash -x getversion.sh tng >> versions

      - name: Build TNG
        working-directory: ${{ env.TNG_DIR }}/source
        run: make -j2 V=1 && mv gameaarch64.so ../gameaarch64.so
        env:
          CC: "gcc"

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: tng-lin-arm64-library
          path: |
            ${{ env.TNG_DIR }}/gameaarch64.so
            ${{ env.TNG_DIR }}/versions

  linux_x86_64_build_q2pro_steam:
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, x86]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: actionquake/q2pro
          path: ${{ env.Q2PRO_DIR }}

      # Self-hosted runner has these
      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt install -y libsdl2-dev libopenal-dev \
      #     libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
      #     libcurl4-gnutls-dev

      - uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: ${{ env.DIST_DIR }

      - name: Get version info for q2pro
        id: version
        run: |
          cp ${{ env.DIST_DIR }/build/getversion.sh ${{ env.Q2PRO_DIR }}/
          cd ${{ env.Q2PRO_DIR }} && bash -x getversion.sh q2pro >> versions

      - name: Copy config build files
        run: |
          cp ${{ env.DIST_DIR }/build/linux/config_linux64_steam ${{ env.Q2PRO_DIR }}/.config
          cp ${{ env.DIST_DIR }/build/q2pro_Makefile ${{ env.Q2PRO_DIR }}/Makefile

      - name: Build Q2Pro
        working-directory: ${{ env.Q2PRO_DIR }}
        run: make strip -j2 V=1
        env:
          CC: "gcc"
          CONFIG_FILE: ".config"

      - name: Make Q2Pro binaries executable
        working-directory: ${{ env.Q2PRO_DIR }}
        run: |
          chmod +x q2pro q2proded

      - name: Generate archive
        uses: actions/upload-artifact@v3
        with:
          name: q2pro-linux-x86_64-steam
          path: |
            ${{ env.Q2PRO_DIR }}/q2pro
            ${{ env.Q2PRO_DIR }}/q2proded
            ${{ env.Q2PRO_DIR }}/versions